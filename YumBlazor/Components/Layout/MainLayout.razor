@using YumBlazor.Utility

@inherits LayoutComponentBase

@* Can use this object to kinda get the authentication state for a user *@
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="page">
    <AuthorizeView Roles="@SD.Role_Admin">
        <div class="sidebar">
            <NavMenu />
        </div>
    </AuthorizeView>

    <main>
        @if (_navBarVisible)
        {
            <NavBar></NavBar>
        }

        @Body

    </main>
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    private bool _navBarVisible;

    protected override async Task OnInitializedAsync()
    {
        _navBarVisible = await ShowNavBar();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        _navBarVisible = await ShowNavBar();
    }

    //
    private async Task<bool> ShowNavBar()
    {
        // Get the Auth state from the user if they are logged in
        var autheState = await AuthenticationStateProvider.GetAuthenticationStateAsync();

        // get the specific user, and see if he is authenticated
        var user = autheState.User;
        var authenticated = user.Identity is not null && user.Identity.IsAuthenticated;

        if (!authenticated)
        {
            return true;
        }

        // NavBar should not be displayed to Admin user
        if (!user.IsInRole(SD.Role_Admin))
        {
            return true;
        }
        return false;
    }
}

    @* Example how specific roles can see content *@
    @* <AuthorizeView >
    Any authorized user can see this !
    </AuthorizeView>
    <AuthorizeView Roles="@SD.Role_Admin">
    ADMIN Can see this !
    </AuthorizeView>
    <AuthorizeView Roles="@SD.Role_Customer">
    CUSTOMER Can see this !
    </AuthorizeView> *@
